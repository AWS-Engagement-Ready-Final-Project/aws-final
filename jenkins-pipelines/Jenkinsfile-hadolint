pipeline {
    agent any

    parameters {
        string(name: 'DOCKERFILE_PATH', defaultValue: '', description: 'Path to Dockerfile to lint')
    }

    environment {
        HADOLINT_BIN = "${WORKSPACE}/.local/bin/hadolint"
        PATH = "${WORKSPACE}/.local/bin:${PATH}"
    }

    stages {
        stage('Install hadolint') {
            steps {
                script {
                    sh '''
                        set -e
                        echo "Installing hadolint..."
                        mkdir -p ${WORKSPACE}/.local/bin
                        curl -sSL -o hadolint-Linux-x86_64 https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
                        mv hadolint-Linux-x86_64 ${HADOLINT_BIN}
                        chmod +x ${HADOLINT_BIN}
                        echo "‚úÖ hadolint installed at ${HADOLINT_BIN}"
                        ${HADOLINT_BIN} --version
                    '''
                }
            }
        }

        stage('Hadolint Scan') {
            steps {
                script {
                    if (fileExists(params.DOCKERFILE_PATH)) {
                        echo "üîç Running hadolint on ${params.DOCKERFILE_PATH}"
                        def result = sh(
                            script: "${HADOLINT_BIN} ${params.DOCKERFILE_PATH} || true",
                            returnStdout: true
                        ).trim()
                        if (result) {
                            echo "‚ö†Ô∏è hadolint found issues:\n${result}"
                        } else {
                            echo "‚úÖ hadolint passed cleanly for ${params.DOCKERFILE_PATH}"
                        }
                    } else {
                        echo "‚ùå Hadolint skipped: Dockerfile '${params.DOCKERFILE_PATH}' not found"
                    }
                }
            }
        }
    }
}
