pipeline {
    agent any
    parameters {
        string(name: 'DOCKERFILE_PATH', defaultValue: '', description: 'Path to Dockerfile')
    }
    stages {
        stage('Install hadolint') {
            steps {
                sh '''
                    if ! command -v hadolint &>/dev/null; then
                        echo "Installing hadolint..."
                        curl -LO https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
                        chmod +x hadolint-Linux-x86_64
                        mv hadolint-Linux-x86_64 ~/.local/bin/hadolint || sudo mv hadolint-Linux-x86_64 /usr/local/bin/hadolint
                    else
                        echo "‚úÖ hadolint already installed"
                    fi
                '''
            }
        }

        stage('Hadolint Scan') {
            steps {
                script {
                    if (fileExists(params.DOCKERFILE_PATH)) {
                        echo "üîç Running hadolint on ${params.DOCKERFILE_PATH}"
                        def result = sh(script: "hadolint ${params.DOCKERFILE_PATH}", returnStatus: true)
                        if (result != 0) {
                            echo "‚ö†Ô∏è hadolint found issues in ${params.DOCKERFILE_PATH}"
                        } else {
                            echo "‚úÖ hadolint passed cleanly for ${params.DOCKERFILE_PATH}"
                        }
                    } else {
                        echo "‚ùå hadolint skipped: file '${params.DOCKERFILE_PATH}' not found"
                    }
                }
            }
        }
    }
}
