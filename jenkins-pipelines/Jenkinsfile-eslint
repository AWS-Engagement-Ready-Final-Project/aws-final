node {
    stage('Checkout') {
        checkout scm
    }

    withEnv(["PATH+LOCAL=${env.HOME}/.local/bin:${env.PATH}"]) {
        docker.image('node:20-alpine').inside("-u 111:113 -v $WORKSPACE:/app -w /app") {

            stage('Install dependencies & ESLint') {
                dir('frontend') {
                    // Create a local .npm cache folder
                    sh 'mkdir -p .npm-cache'

                    // Install dependencies with custom cache dir
                    sh 'npm install --cache .npm-cache'

                    // Check eslint version (fail-safe)
                    sh 'npx --cache .npm-cache eslint --version || true'
                }
            }

            stage('Run ESLint') {
                dir('frontend') {
                    echo "üîç Running ESLint in frontend (allow failures)"
                    def result = sh(
                        script: 'npx --cache .npm-cache eslint . || true',
                        returnStatus: true
                    )
                    if (result != 0) {
                        echo "‚ö†Ô∏è ESLint found issues (exit code: ${result})"
                    } else {
                        echo "‚úÖ ESLint passed cleanly"
                    }
                }
            }

        } // docker
    } // withEnv
} // node
